# This is a basic workflow to help you get started with Actions
name: Alt engine
# Controls when the action will run
on: 
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
# This workflow contains a single job called "build"
  buildarmv7:
    name: Armv7
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Android NDK
        uses: nttld/setup-ndk@main
        id: setup-ndk
        with:
          ndk-version: r21e

      - name: Setup Java JDK
        uses: actions/setup-java@main
        with:
          distribution: zulu
          java-version: 12

      - name: Setup Android SDK
        uses: android-actions/setup-android@main

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5

      - name: Install Haxelib
        run: |
          haxelib --quiet install hxcpp
          haxelib --quiet install format
          haxelib --quiet install hxp
          haxelib --quiet install lime 7.9.0
          haxelib --quiet install openfl 9.1.0
          haxelib --quiet install flixel 4.11.0
          haxelib --quiet install flixel-addons 2.11.0
          haxelib --quiet install flixel-ui 2.4.0
          haxelib --quiet install hscript
          haxelib install polymod --quiet
          haxelib install hxcpp-debug-server --quiet
          haxelib git hxCodec https://github.com/SPLCoding/hxCodec-but-it-works-xd.git
          haxelib git linc_luajit https://github.com/Sirox228/linc_luajit.git
          haxelib git extension-androidtools https://github.com/MAJigsaw77/extension-androidtools
          haxelib install spinehaxe --quiet
          haxelib git SScript https://github.com/TheWorldMachinima/SScript
          haxelib git hscript-ex https://github.com/ianharrigan/hscript-ex
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          haxelib git polymod https://github.com/larsiusprime/polymod
          haxelib git extension-hscriptTools https://github.com/Fearester/HscriptTools-extension
          haxelib git extension-videoview https://github.com/MAJigsaw77/extension-videoview.git
          haxelib list
      - name: Setup Lime
        run: |
          echo "${{github.run_id}}" > VERSION
          haxelib run lime setup -alias -y
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_HOME
          haxelib run lime config JAVA_HOME $JAVA_HOME
          haxelib run lime config ANDROID_SETUP true
          haxelib set lime 7.9.0
          haxelib set openfl 9.1.0
          haxelib set flixel-addons 2.11.0
          haxelib set flixel-ui 2.4.0
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Compile
        run: |
         haxelib run lime build android -D no-compilation -D luajit_static -D macro-times -D analyzer-optimize -armv7 --app-version="4.0.0-${{ github.run_id}}"
         cd export/release/android/bin/app/build/outputs/apk/debug
         mv AltEngine-debug.apk AltEngine.apk

      - name: Publish Artifact
        uses: actions/upload-artifact@main
        with:
          name: buildarmv7
          path: export/release/android/bin/app/build/outputs/apk/debug
BuildLinux:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          sudo apt-get install libvlc-dev
          sudo apt-get install libvlccore-dev
          haxelib --quiet install hxcpp
          haxelib --quiet install format
          haxelib --quiet install hxp
          haxelib --quiet install lime 7.9.0
          haxelib --quiet install openfl 9.1.0
          haxelib --quiet install flixel 4.11.0
          haxelib --quiet install flixel-addons 2.11.0
          haxelib --quiet install flixel-ui 2.4.0
          haxelib --quiet install hscript
          haxelib install polymod --quiet
          haxelib install hxcpp-debug-server --quiet
          haxelib git hxCodec https://github.com/SPLCoding/hxCodec-but-it-works-xd.git
          haxelib git linc_luajit https://github.com/Sirox228/linc_luajit.git
          haxelib install spinehaxe --quiet
          haxelib git SScript https://github.com/TheWorldMachinima/SScript
          haxelib git hscript-ex https://github.com/ianharrigan/hscript-ex
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          haxelib git polymod https://github.com/larsiusprime/polymod
          haxelib git extension-hscriptTools https://github.com/Fearester/HscriptTools-extension
          haxelib list
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build Project.xml linux --app-version="4.0.0-${{ github.run_id}}"
      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: Alt Engine Linux Build
          path: 'export/release/linux/bin'
  BuildWindows:
    runs-on: windows-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2.3.0

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib setup C:/haxelib
          haxelib --quiet install hxp
          haxelib --quiet install lime 7.9.0
          haxelib --quiet install openfl 9.1.0
          haxelib --quiet install flixel 4.11.0
          haxelib --quiet install flixel-addons 2.11.0
          haxelib --quiet install flixel-ui 2.4.0
          haxelib --quiet install hscript
          haxelib install polymod --quiet
          haxelib install hxcpp-debug-server --quiet
          haxelib git hxCodec https://github.com/SPLCoding/hxCodec-but-it-works-xd.git
          haxelib git linc_luajit https://github.com/Sirox228/linc_luajit.git
          haxelib install spinehaxe --quiet
          haxelib git SScript https://github.com/TheWorldMachinima/SScript
          haxelib git hscript-ex https://github.com/ianharrigan/hscript-ex
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          haxelib git polymod https://github.com/larsiusprime/polymod
          haxelib git extension-hscriptTools https://github.com/Fearester/HscriptTools-extension
        shell: cmd
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build windows --app-version="4.0.0-${{ github.run_id}}"
      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: Alt Engine Windows Build
          path: export/release/windows/bin
  BuildMac:
    runs-on: macos-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib setup ~/haxelib
          uiet install hxp
          haxelib --quiet install lime 7.9.0
          haxelib --quiet install openfl 9.1.0
          haxelib --quiet install flixel 4.11.0
          haxelib --quiet install flixel-addons 2.11.0
          haxelib --quiet install flixel-ui 2.4.0
          haxelib --quiet install hscript
          haxelib install polymod --quiet
          haxelib install hxcpp-debug-server --quiet
          haxelib git hxCodec https://github.com/SPLCoding/hxCodec-but-it-works-xd.git
          haxelib git linc_luajit https://github.com/Sirox228/linc_luajit.git
          haxelib install spinehaxe --quiet
          haxelib git SScript https://github.com/TheWorldMachinima/SScript
          haxelib git hscript-ex https://github.com/ianharrigan/hscript-ex
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          haxelib git polymod https://github.com/larsiusprime/polymod
          haxelib git extension-hscriptTools https://github.com/Fearester/HscriptTools-extension
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build mac --app-version="4.0.0-${{ github.run_id}}"
      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: Alt Engine Mac Build
          path: export/release/macos/bin
